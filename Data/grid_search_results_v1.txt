Best ParametersL:
{'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}


{'mean_fit_time': array([0.69647276, 0.62201762, 0.71126878, 0.75092757, 0.66971791,
       0.76105213, 0.76860774, 0.66326952, 0.88762355, 0.81561828,
       0.89090157, 0.90964472, 0.75264931, 0.67163539, 0.75611293,
       1.18636191, 1.29019797, 1.21782446, 0.7178973 , 0.67337823,
       0.7343533 , 0.77056825, 0.68587708, 0.7693131 , 0.75750828,
       0.67765021, 0.75077629, 3.5366714 , 3.21887159, 3.7495656 ,
       3.83671081, 3.36012769, 3.78742063, 4.02803922, 3.5473187 ,
       4.24055028]), 'std_fit_time': array([0.03523839, 0.00053596, 0.00661075, 0.00302446, 0.00451243,
       0.01375198, 0.00247204, 0.00136805, 0.00084949, 0.00939012,
       0.09019303, 0.04621875, 0.00237727, 0.00089049, 0.01061094,
       0.0076493 , 0.00042379, 0.00292635, 0.00441301, 0.01099968,
       0.00143576, 0.00139296, 0.00458479, 0.00876904, 0.00547671,
       0.0064187 , 0.00860715, 0.04312253, 0.07544923, 0.00617146,
       0.01048243, 0.01834154, 0.01311195, 0.00994444, 0.01315784,
       0.00071526]), 'mean_score_time': array([0.03264511, 0.02875257, 0.0290463 , 0.03077185, 0.02892756,
       0.02857876, 0.02900434, 0.02915251, 0.02943695, 0.02924538,
       0.03041935, 0.03226244, 0.02984178, 0.0302341 , 0.02850711,
       0.02873647, 0.0326165 , 0.02937949, 0.02923989, 0.02864718,
       0.02852178, 0.0294106 , 0.02808797, 0.02927685, 0.02874541,
       0.02907741, 0.02865469, 0.03202641, 0.02849698, 0.02894914,
       0.02906096, 0.02995002, 0.02861512, 0.02867103, 0.02915728,
       0.02990854]), 'std_score_time': array([4.40347195e-03, 7.86304474e-04, 7.65323639e-05, 6.27160072e-04,
       8.03709030e-04, 2.72274017e-04, 5.30958176e-04, 5.75423241e-04,
       1.87754631e-04, 4.91619110e-04, 5.44309616e-04, 9.55462456e-04,
       6.52432442e-04, 2.80380249e-04, 2.39729881e-04, 1.85132027e-04,
       3.92591953e-03, 5.36441803e-06, 7.55310059e-04, 3.28779221e-04,
       1.45435333e-05, 1.08957291e-04, 3.02433968e-04, 5.11169434e-04,
       1.26361847e-05, 1.63197517e-04, 5.16176224e-05, 2.90501118e-03,
       2.96592712e-04, 4.12821770e-04, 3.83257866e-04, 1.79088116e-03,
       2.44975090e-04, 3.12805176e-04, 2.56180763e-04, 1.01697445e-03]), 'param_sgdregressor__alpha': masked_array(data=[6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__epsilon': masked_array(data=[0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
                   0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__learning_rate': masked_array(data=['constant', 'constant', 'constant', 'constant',
                   'constant', 'constant', 'constant', 'constant',
                   'constant', 'optimal', 'optimal', 'optimal', 'optimal',
                   'optimal', 'optimal', 'optimal', 'optimal', 'optimal',
                   'invscaling', 'invscaling', 'invscaling', 'invscaling',
                   'invscaling', 'invscaling', 'invscaling', 'invscaling',
                   'invscaling', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__loss': masked_array(data=['squared_loss', 'squared_loss', 'squared_loss',
                   'huber', 'huber', 'huber', 'epsilon_insensitive',
                   'epsilon_insensitive', 'epsilon_insensitive',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'huber', 'huber', 'huber', 'epsilon_insensitive',
                   'epsilon_insensitive', 'epsilon_insensitive',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'huber', 'huber', 'huber', 'epsilon_insensitive',
                   'epsilon_insensitive', 'epsilon_insensitive',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'huber', 'huber', 'huber', 'epsilon_insensitive',
                   'epsilon_insensitive', 'epsilon_insensitive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__penalty': masked_array(data=['l1', 'l2', 'elasticnet', 'l1', 'l2', 'elasticnet',
                   'l1', 'l2', 'elasticnet', 'l1', 'l2', 'elasticnet',
                   'l1', 'l2', 'elasticnet', 'l1', 'l2', 'elasticnet',
                   'l1', 'l2', 'elasticnet', 'l1', 'l2', 'elasticnet',
                   'l1', 'l2', 'elasticnet', 'l1', 'l2', 'elasticnet',
                   'l1', 'l2', 'elasticnet', 'l1', 'l2', 'elasticnet'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__tol': masked_array(data=[0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001, 0.001,
                   0.001, 0.001, 0.001, 0.001],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'constant', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'constant', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'constant', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'constant', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'constant', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'constant', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'constant', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'constant', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'constant', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'optimal', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'optimal', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'optimal', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'optimal', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'optimal', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'optimal', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'optimal', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'optimal', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'optimal', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'invscaling', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'invscaling', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'invscaling', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'invscaling', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'invscaling', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'invscaling', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'invscaling', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'invscaling', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'invscaling', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'huber', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'l2', 'sgdregressor__tol': 0.001}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.01, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'epsilon_insensitive', 'sgdregressor__penalty': 'elasticnet', 'sgdregressor__tol': 0.001}], 'split0_test_score': array([ 0.11648702,  0.16405949,  0.17440038,  0.05643152,  0.07032608,
        0.08494069,  0.10842934,  0.06036297,  0.05555827,  0.16388672,
        0.16617791,  0.18274602,  0.07978526,  0.06556629,  0.07912341,
       -0.02328566,  0.12668107,  0.09335115,  0.18828622,  0.18906115,
        0.18858054,  0.06728908,  0.07659348,  0.07325687,  0.06225529,
        0.07082571,  0.08584793,  0.18889876,  0.18880227,  0.18883063,
        0.06885814,  0.07369147,  0.07302377,  0.07329999,  0.07501422,
        0.07516387]), 'split1_test_score': array([ 0.18280284,  0.15467641,  0.18704016,  0.06953979,  0.07268464,
        0.05526562,  0.10684933, -0.24191064,  0.03921016,  0.15032692,
        0.1870793 ,  0.18325324,  0.07016118,  0.07264328,  0.06145774,
        0.0838143 ,  0.14510839,  0.0709472 ,  0.18814056,  0.19240749,
        0.19183587,  0.05831243,  0.06598718,  0.06462831,  0.03518103,
        0.09534767,  0.13493651,  0.19362849,  0.19367023,  0.19366638,
        0.05913762,  0.06497148,  0.06407336,  0.06604005,  0.06609199,
        0.0658134 ]), 'mean_test_score': array([ 0.14964493,  0.15936795,  0.18072027,  0.06298565,  0.07150536,
        0.07010315,  0.10763934, -0.09077384,  0.04738422,  0.15710682,
        0.1766286 ,  0.18299963,  0.07497322,  0.06910479,  0.07029058,
        0.03026432,  0.13589473,  0.08214918,  0.18821339,  0.19073432,
        0.19020821,  0.06280076,  0.07129033,  0.06894259,  0.04871816,
        0.08308669,  0.11039222,  0.19126362,  0.19123625,  0.1912485 ,
        0.06399788,  0.06933147,  0.06854856,  0.06967002,  0.0705531 ,
        0.07048863]), 'std_test_score': array([3.31579122e-02, 4.69153750e-03, 6.31989046e-03, 6.55413601e-03,
       1.17928128e-03, 1.48375339e-02, 7.90004946e-04, 1.51136809e-01,
       8.17405664e-03, 6.77989898e-03, 1.04506943e-02, 2.53607535e-04,
       4.81203715e-03, 3.53849843e-03, 8.83283771e-03, 5.35499820e-02,
       9.21365960e-03, 1.12019785e-02, 7.28339815e-05, 1.67316801e-03,
       1.62766670e-03, 4.48832791e-03, 5.30314895e-03, 4.31427837e-03,
       1.35371324e-02, 1.22609794e-02, 2.45442900e-02, 2.36486382e-03,
       2.43397941e-03, 2.41787438e-03, 4.86025721e-03, 4.35999644e-03,
       4.47520811e-03, 3.62996847e-03, 4.46111532e-03, 4.67523671e-03]), 'rank_test_score': array([12, 10,  8, 31, 19, 24, 15, 36, 34, 11,  9,  7, 18, 27, 23, 35, 13,
       17,  6,  4,  5, 32, 20, 28, 33, 16, 14,  1,  3,  2, 30, 26, 29, 25,
       21, 22], dtype=int32), 'split0_train_score': array([ 0.14086862,  0.16280617,  0.18471653,  0.04923786,  0.06291889,
        0.08026586,  0.11062515,  0.07542464,  0.04895159,  0.16601589,
        0.16782909,  0.18840046,  0.07350355,  0.0580617 ,  0.07340019,
       -0.02859515,  0.1260238 ,  0.08996578,  0.19316613,  0.19408751,
        0.19287517,  0.06051865,  0.07026563,  0.06659771,  0.05705395,
        0.06483815,  0.0810596 ,  0.19469158,  0.19469311,  0.19469313,
        0.06210191,  0.06716082,  0.0664632 ,  0.06667852,  0.06844441,
        0.06852218]), 'split1_train_score': array([ 0.1828021 ,  0.15494109,  0.17921139,  0.07506955,  0.07904389,
        0.06184979,  0.11088527, -0.24053632,  0.0383632 ,  0.13532529,
        0.18512626,  0.17515256,  0.07704134,  0.0793475 ,  0.06826353,
        0.08335706,  0.14793191,  0.07373482,  0.1832299 ,  0.18859816,
        0.18704078,  0.06524415,  0.07255633,  0.07119953,  0.0425546 ,
        0.09917943,  0.13885105,  0.18997056,  0.18997213,  0.18997123,
        0.06593961,  0.07150648,  0.07064715,  0.07267988,  0.07275687,
        0.07242335]), 'mean_train_score': array([ 0.16183536,  0.15887363,  0.18196396,  0.06215371,  0.07098139,
        0.07105782,  0.11075521, -0.08255584,  0.0436574 ,  0.15067059,
        0.17647768,  0.18177651,  0.07527244,  0.0687046 ,  0.07083186,
        0.02738095,  0.13697785,  0.0818503 ,  0.18819801,  0.19134284,
        0.18995798,  0.0628814 ,  0.07141098,  0.06889862,  0.04980427,
        0.08200879,  0.10995532,  0.19233107,  0.19233262,  0.19233218,
        0.06402076,  0.06933365,  0.06855517,  0.0696792 ,  0.07060064,
        0.07047276]), 'std_train_score': array([2.09667390e-02, 3.93254234e-03, 2.75257165e-03, 1.29158493e-02,
       8.06250011e-03, 9.20803446e-03, 1.30060086e-04, 1.57980477e-01,
       5.29419421e-03, 1.53452971e-02, 8.64858853e-03, 6.62394879e-03,
       1.76889758e-03, 1.06428994e-02, 2.56832893e-03, 5.59761038e-02,
       1.09540560e-02, 8.11548002e-03, 4.96811447e-03, 2.74467574e-03,
       2.91719551e-03, 2.36275089e-03, 1.14535307e-03, 2.30091019e-03,
       7.24967366e-03, 1.71706400e-02, 2.88957256e-02, 2.36051147e-03,
       2.36049376e-03, 2.36094681e-03, 1.91885246e-03, 2.17283026e-03,
       2.09197557e-03, 3.00067988e-03, 2.15623002e-03, 1.95058538e-03])}