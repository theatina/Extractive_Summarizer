Best ParametersL:
{'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}


{'mean_fit_time': array([3.96351552, 3.9916048 , 3.98040032, 3.97167635, 4.09140968,
       3.9779346 , 3.9971031 , 3.96091604, 3.98151851, 4.09197605,
       3.95992112, 4.02234602, 3.95428133, 3.95461416, 4.10142636,
       3.98954427, 3.94341743, 3.96205795, 3.9923805 , 4.07957506,
       3.99597979, 3.96502972, 3.95740211, 3.99646258, 4.10393405,
       3.78475034, 3.7786206 , 3.74010754, 3.80005491, 3.92981946,
       3.73284626, 3.76625347, 3.70810568, 3.76484954, 3.95392716,
       3.75958383, 3.72448647, 3.72031283, 3.94338393, 3.92278671,
       3.69770586, 3.77100861, 3.75531304, 3.86983192, 4.00154114,
       3.77092779, 3.73031509, 3.71883368, 3.8637284 , 3.96159828,
       3.54264152, 3.55153048, 3.57963967, 3.63143742, 3.77256644,
       3.66606271, 3.58945477, 3.54799497, 3.60726893, 3.75732517,
       3.53750622, 3.55647683, 3.53287923, 3.6894207 , 3.72269118,
       3.49258244, 3.53593659, 3.65522361, 3.58822322, 3.74830389,
       3.56605113, 3.56042862, 3.57035613, 3.64854729, 3.71259439,
       3.50759399, 3.50514615, 3.52806485, 3.63552308, 3.73367417,
       3.49419177, 3.51270831, 3.50169754, 3.6791023 , 3.76197004,
       3.54721975, 3.57122099, 3.54885173, 3.74674201, 3.76729381,
       3.51129735, 3.51781619, 3.50391352, 3.63222253, 3.73342109,
       3.5242759 , 3.49983001, 3.5184598 , 3.5921967 , 3.79296875,
       3.53156722, 3.50653768, 3.64890587, 3.73713577, 3.90795887,
       3.57141817, 3.49772179, 3.50182879, 3.712237  , 3.82948554,
       3.49419928, 3.57438028, 3.53585017, 3.63860488, 3.85955691,
       3.58144486, 3.55782771, 3.54172552, 3.72157705, 3.95153141,
       3.52376056, 3.82332182, 3.51213384, 3.64176726, 3.84593832]), 'std_fit_time': array([1.41878128e-02, 1.71818733e-02, 5.07521629e-03, 3.81469727e-06,
       4.11796570e-03, 8.62431526e-03, 1.21575594e-02, 3.93581390e-03,
       3.24940681e-03, 1.15374327e-02, 1.16405487e-02, 7.11340904e-02,
       6.97755814e-03, 9.70506668e-03, 2.53965855e-02, 1.40868425e-02,
       6.21902943e-03, 1.09399557e-02, 1.47413015e-02, 5.86724281e-03,
       2.42865086e-02, 1.96695328e-04, 5.25712967e-05, 2.28161812e-02,
       1.55155659e-02, 4.29069996e-03, 1.57243013e-02, 4.10699844e-03,
       5.02864122e-02, 2.95017958e-02, 6.67095184e-03, 3.75406742e-02,
       1.09237432e-02, 4.25537825e-02, 1.32044554e-02, 2.85786390e-02,
       7.17890263e-03, 2.08206177e-02, 8.74834061e-02, 8.21065903e-03,
       8.06057453e-03, 8.88884068e-03, 3.00633907e-03, 2.03627348e-02,
       1.14703178e-02, 1.36932135e-02, 1.55317783e-03, 1.24373436e-02,
       1.68956518e-02, 7.14266300e-03, 1.62986517e-02, 9.61184502e-04,
       7.22575188e-03, 1.75431967e-02, 1.72539949e-02, 1.43837094e-01,
       2.99519300e-02, 7.72488117e-03, 5.77210188e-02, 4.00061607e-02,
       9.35661793e-03, 2.86076069e-02, 7.70771503e-03, 5.96654415e-02,
       3.48657370e-02, 1.01567507e-02, 6.50405884e-04, 1.30237579e-01,
       6.96277618e-03, 6.85644150e-03, 1.61961317e-02, 4.05614376e-02,
       5.65686226e-02, 2.30249166e-02, 2.24047899e-02, 1.11280680e-02,
       3.01126242e-02, 5.32244444e-02, 2.54807472e-02, 5.82069159e-02,
       1.20879412e-02, 6.34205341e-03, 1.39155388e-02, 5.81458807e-02,
       5.40096760e-02, 2.84352303e-02, 1.15207434e-02, 2.71899700e-02,
       1.15468740e-01, 2.38138437e-02, 1.14592314e-02, 1.36703253e-02,
       1.17427111e-02, 6.26093149e-02, 9.20958519e-02, 1.00492239e-02,
       9.10043716e-04, 1.60434246e-02, 4.13131714e-03, 5.82160950e-02,
       7.65812397e-03, 3.32832336e-03, 8.01845789e-02, 1.69501662e-01,
       2.21250653e-01, 2.42072344e-02, 2.34831572e-02, 3.94880772e-03,
       8.29619169e-02, 1.63786292e-01, 6.80112839e-03, 7.15819597e-02,
       3.35470438e-02, 5.24852276e-02, 1.34433031e-01, 5.03498316e-02,
       1.02331638e-02, 3.56236696e-02, 1.50073171e-01, 1.44423246e-01,
       1.99027061e-02, 9.63363647e-02, 3.45804691e-02, 4.01351452e-02,
       1.74413085e-01]), 'mean_score_time': array([0.02804363, 0.02896774, 0.02840769, 0.02907419, 0.03028905,
       0.02885807, 0.02895796, 0.02939117, 0.02966332, 0.03171968,
       0.03134918, 0.02826405, 0.03296149, 0.0293268 , 0.0323137 ,
       0.03530645, 0.03052032, 0.02857125, 0.02880096, 0.02826118,
       0.02891815, 0.02867496, 0.0282141 , 0.02906609, 0.03335869,
       0.02932715, 0.02993095, 0.02858484, 0.02854288, 0.02904451,
       0.03038466, 0.02852285, 0.028687  , 0.02839422, 0.0300411 ,
       0.02916348, 0.02862418, 0.02922416, 0.03092718, 0.02901661,
       0.03012681, 0.02859139, 0.02883232, 0.02956533, 0.02978241,
       0.02843857, 0.02890372, 0.0287379 , 0.02902639, 0.0329206 ,
       0.02872038, 0.02866709, 0.02895927, 0.03260744, 0.02929902,
       0.02885568, 0.02989197, 0.02826583, 0.02878535, 0.02939129,
       0.02910304, 0.02886033, 0.02940702, 0.03311276, 0.02851522,
       0.02860737, 0.02848685, 0.02905989, 0.02917755, 0.02931595,
       0.03339076, 0.03382707, 0.02980924, 0.02961659, 0.02883899,
       0.02862287, 0.02848554, 0.02898598, 0.02935112, 0.02839756,
       0.02922106, 0.02817059, 0.02888   , 0.02914369, 0.02906716,
       0.02895248, 0.02907765, 0.02889729, 0.03008962, 0.02901673,
       0.02890587, 0.0290128 , 0.02995133, 0.0288831 , 0.03007019,
       0.02872145, 0.02875531, 0.02975082, 0.02865541, 0.02993596,
       0.03022981, 0.03026879, 0.02872169, 0.02901971, 0.03275871,
       0.03251696, 0.0287317 , 0.02809238, 0.02782571, 0.0281471 ,
       0.02848113, 0.02942789, 0.02903998, 0.0283308 , 0.02848601,
       0.02867901, 0.0287807 , 0.02837384, 0.02804565, 0.02859378,
       0.03526664, 0.02974641, 0.03861845, 0.02868915, 0.02818918]), 'std_score_time': array([1.09553337e-04, 4.97221947e-04, 2.95042992e-04, 4.20331955e-04,
       1.90174580e-03, 2.00629234e-04, 7.71284103e-05, 4.02331352e-04,
       4.54902649e-04, 2.39777565e-03, 1.42550468e-03, 5.91278076e-05,
       4.08828259e-03, 1.36256218e-04, 2.75957584e-03, 2.12049484e-03,
       1.86264515e-03, 6.80685043e-05, 4.52995300e-06, 1.66893005e-06,
       2.78353691e-04, 3.27229500e-04, 9.95397568e-05, 3.72886658e-04,
       4.21917439e-03, 8.44478607e-04, 1.99913979e-04, 3.52978706e-04,
       2.51650810e-04, 7.35640526e-04, 1.72317028e-03, 2.65717506e-04,
       6.33478165e-04, 1.33991241e-04, 7.10844994e-04, 7.02738762e-04,
       3.52025032e-04, 1.16348267e-04, 2.82168388e-03, 1.80363655e-04,
       1.16491318e-03, 4.29153442e-05, 1.50322914e-04, 5.97238541e-04,
       9.20414925e-04, 9.16957855e-04, 6.76393509e-04, 4.39524651e-04,
       4.60743904e-04, 4.19116020e-03, 2.61545181e-04, 4.68134880e-04,
       4.82797623e-04, 4.64332104e-03, 2.46286392e-04, 4.89950180e-05,
       1.30987167e-03, 1.39832497e-04, 1.46746635e-04, 9.63926315e-04,
       5.64813614e-04, 2.01463699e-04, 2.19345093e-04, 4.35304642e-03,
       3.34978104e-05, 4.45842743e-04, 6.49690628e-05, 1.52826309e-04,
       8.33272934e-05, 3.06367874e-04, 1.65224075e-04, 4.66203690e-03,
       5.22136688e-04, 9.53435898e-04, 3.09348106e-04, 2.18629837e-04,
       1.13725662e-04, 2.57253647e-04, 1.06692314e-04, 4.92095947e-04,
       4.28438187e-04, 4.05073166e-04, 2.91466713e-04, 6.76274300e-04,
       2.84790993e-04, 1.22666359e-04, 1.32441521e-04, 3.72648239e-04,
       2.58445740e-04, 1.02758408e-04, 9.13143158e-05, 3.15308571e-04,
       6.54697418e-04, 1.15513802e-04, 1.24490261e-03, 2.11119652e-04,
       1.78933144e-04, 4.42743301e-04, 5.53488731e-04, 1.05106831e-03,
       4.99248505e-04, 1.61826611e-03, 1.27553940e-05, 1.62720680e-04,
       2.79736519e-03, 3.76987457e-03, 7.98583031e-04, 1.04904175e-04,
       2.53319740e-04, 6.13927841e-05, 2.93612480e-04, 4.06384468e-04,
       1.30057335e-04, 6.65187836e-05, 9.56058502e-05, 2.23517418e-04,
       7.48395920e-04, 1.87993050e-04, 1.18255615e-04, 4.86373901e-05,
       5.64289093e-03, 4.09483910e-04, 7.80689716e-03, 5.34057617e-05,
       1.63078308e-04]), 'param_sgdregressor__alpha': masked_array(data=[0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04,
                   0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04,
                   0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.008, 0.008,
                   0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008,
                   0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008,
                   0.008, 0.008, 0.008, 0.008, 0.008, 0.008, 0.008,
                   0.0016, 0.0016, 0.0016, 0.0016, 0.0016, 0.0016, 0.0016,
                   0.0016, 0.0016, 0.0016, 0.0016, 0.0016, 0.0016, 0.0016,
                   0.0016, 0.0016, 0.0016, 0.0016, 0.0016, 0.0016, 0.0016,
                   0.0016, 0.0016, 0.0016, 0.0016, 0.00032, 0.00032,
                   0.00032, 0.00032, 0.00032, 0.00032, 0.00032, 0.00032,
                   0.00032, 0.00032, 0.00032, 0.00032, 0.00032, 0.00032,
                   0.00032, 0.00032, 0.00032, 0.00032, 0.00032, 0.00032,
                   0.00032, 0.00032, 0.00032, 0.00032, 0.00032, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__epsilon': masked_array(data=[0.04, 0.04, 0.04, 0.04, 0.04, 0.008, 0.008, 0.008,
                   0.008, 0.008, 0.0016, 0.0016, 0.0016, 0.0016, 0.0016,
                   0.00032, 0.00032, 0.00032, 0.00032, 0.00032, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 0.04, 0.04, 0.04,
                   0.04, 0.04, 0.008, 0.008, 0.008, 0.008, 0.008, 0.0016,
                   0.0016, 0.0016, 0.0016, 0.0016, 0.00032, 0.00032,
                   0.00032, 0.00032, 0.00032, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05, 0.04, 0.04, 0.04, 0.04, 0.04, 0.008,
                   0.008, 0.008, 0.008, 0.008, 0.0016, 0.0016, 0.0016,
                   0.0016, 0.0016, 0.00032, 0.00032, 0.00032, 0.00032,
                   0.00032, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05,
                   0.04, 0.04, 0.04, 0.04, 0.04, 0.008, 0.008, 0.008,
                   0.008, 0.008, 0.0016, 0.0016, 0.0016, 0.0016, 0.0016,
                   0.00032, 0.00032, 0.00032, 0.00032, 0.00032, 6.4e-05,
                   6.4e-05, 6.4e-05, 6.4e-05, 6.4e-05, 0.04, 0.04, 0.04,
                   0.04, 0.04, 0.008, 0.008, 0.008, 0.008, 0.008, 0.0016,
                   0.0016, 0.0016, 0.0016, 0.0016, 0.00032, 0.00032,
                   0.00032, 0.00032, 0.00032, 6.4e-05, 6.4e-05, 6.4e-05,
                   6.4e-05, 6.4e-05],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__learning_rate': masked_array(data=['adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive', 'adaptive', 'adaptive', 'adaptive',
                   'adaptive'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__loss': masked_array(data=['squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss', 'squared_loss',
                   'squared_loss', 'squared_loss'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__penalty': masked_array(data=['l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1',
                   'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1', 'l1'],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'param_sgdregressor__tol': masked_array(data=[0.04, 0.008, 0.0016, 0.00032, 6.4e-05, 0.04, 0.008,
                   0.0016, 0.00032, 6.4e-05, 0.04, 0.008, 0.0016, 0.00032,
                   6.4e-05, 0.04, 0.008, 0.0016, 0.00032, 6.4e-05, 0.04,
                   0.008, 0.0016, 0.00032, 6.4e-05, 0.04, 0.008, 0.0016,
                   0.00032, 6.4e-05, 0.04, 0.008, 0.0016, 0.00032,
                   6.4e-05, 0.04, 0.008, 0.0016, 0.00032, 6.4e-05, 0.04,
                   0.008, 0.0016, 0.00032, 6.4e-05, 0.04, 0.008, 0.0016,
                   0.00032, 6.4e-05, 0.04, 0.008, 0.0016, 0.00032,
                   6.4e-05, 0.04, 0.008, 0.0016, 0.00032, 6.4e-05, 0.04,
                   0.008, 0.0016, 0.00032, 6.4e-05, 0.04, 0.008, 0.0016,
                   0.00032, 6.4e-05, 0.04, 0.008, 0.0016, 0.00032,
                   6.4e-05, 0.04, 0.008, 0.0016, 0.00032, 6.4e-05, 0.04,
                   0.008, 0.0016, 0.00032, 6.4e-05, 0.04, 0.008, 0.0016,
                   0.00032, 6.4e-05, 0.04, 0.008, 0.0016, 0.00032,
                   6.4e-05, 0.04, 0.008, 0.0016, 0.00032, 6.4e-05, 0.04,
                   0.008, 0.0016, 0.00032, 6.4e-05, 0.04, 0.008, 0.0016,
                   0.00032, 6.4e-05, 0.04, 0.008, 0.0016, 0.00032,
                   6.4e-05, 0.04, 0.008, 0.0016, 0.00032, 6.4e-05, 0.04,
                   0.008, 0.0016, 0.00032, 6.4e-05],
             mask=[False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False, False, False, False,
                   False, False, False, False, False],
       fill_value='?',
            dtype=object), 'params': [{'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.04, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.008, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.0016, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 0.00032, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.04, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.008, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.0016, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 0.00032, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.04}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.008}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.0016}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 0.00032}, {'sgdregressor__alpha': 6.4e-05, 'sgdregressor__epsilon': 6.4e-05, 'sgdregressor__learning_rate': 'adaptive', 'sgdregressor__loss': 'squared_loss', 'sgdregressor__penalty': 'l1', 'sgdregressor__tol': 6.4e-05}], 'split0_test_score': array([0.06457349, 0.06453687, 0.06441288, 0.06433178, 0.06469112,
       0.0646334 , 0.06460872, 0.06453566, 0.06463927, 0.06458399,
       0.06431452, 0.06448232, 0.06459219, 0.06461885, 0.06481662,
       0.06479561, 0.06469194, 0.06489391, 0.06458837, 0.06454003,
       0.06492281, 0.06448543, 0.06466735, 0.06462904, 0.06455332,
       0.18420033, 0.18420416, 0.18418718, 0.18421857, 0.18418486,
       0.18423638, 0.18418676, 0.184206  , 0.18423276, 0.1841733 ,
       0.18418179, 0.18414281, 0.18423923, 0.18417448, 0.18420495,
       0.1842    , 0.18426217, 0.18418565, 0.18423262, 0.18426528,
       0.18417142, 0.1841994 , 0.18417252, 0.1842203 , 0.1841289 ,
       0.18961802, 0.18961888, 0.18961637, 0.18961331, 0.18960664,
       0.18961137, 0.18960827, 0.18961239, 0.18960775, 0.18961713,
       0.18960891, 0.1896168 , 0.18961107, 0.18961649, 0.18961642,
       0.18960944, 0.18961015, 0.1896139 , 0.18961214, 0.18960415,
       0.18961305, 0.18961396, 0.18961843, 0.18961312, 0.18960976,
       0.18906064, 0.18906987, 0.18903965, 0.18907429, 0.18906726,
       0.18907202, 0.18905227, 0.18906969, 0.18905041, 0.18906612,
       0.18905975, 0.18904844, 0.18906119, 0.18908538, 0.1890651 ,
       0.1890835 , 0.18904433, 0.18906142, 0.18905748, 0.18908304,
       0.18905892, 0.18906652, 0.18908892, 0.18905432, 0.18905023,
       0.18888251, 0.18885798, 0.18886533, 0.1888583 , 0.18886469,
       0.18885149, 0.18886979, 0.18884686, 0.1888613 , 0.18885103,
       0.18885651, 0.18887337, 0.18884147, 0.18888242, 0.18887668,
       0.18885798, 0.18887478, 0.18887276, 0.18885945, 0.18887184,
       0.18885186, 0.18886359, 0.18885617, 0.18887163, 0.18885479]), 'split1_test_score': array([0.04931873, 0.04952447, 0.04947567, 0.04896521, 0.04913296,
       0.04915568, 0.04922869, 0.04898429, 0.04948705, 0.04923498,
       0.04935283, 0.04912426, 0.04936517, 0.04940322, 0.04943444,
       0.04953029, 0.0493518 , 0.04909455, 0.04917904, 0.04957926,
       0.04900478, 0.04945557, 0.04922729, 0.04888398, 0.04951905,
       0.18004787, 0.1800247 , 0.18008078, 0.18008661, 0.18003744,
       0.18008231, 0.18006865, 0.18004856, 0.1800189 , 0.17999899,
       0.18000588, 0.18015041, 0.18005412, 0.18025525, 0.18008051,
       0.1800457 , 0.18014485, 0.17995798, 0.18007984, 0.17995776,
       0.17991521, 0.1801373 , 0.18002122, 0.18012204, 0.18013916,
       0.19202615, 0.1920227 , 0.19203889, 0.19205399, 0.19210417,
       0.19203051, 0.19207746, 0.19205882, 0.19205359, 0.19205017,
       0.19207347, 0.19207198, 0.19203585, 0.19205352, 0.19201195,
       0.19199793, 0.19204945, 0.19207734, 0.19210897, 0.1920779 ,
       0.19202425, 0.19202552, 0.19206102, 0.19206142, 0.19205186,
       0.19342898, 0.19339328, 0.19345164, 0.19342196, 0.19341365,
       0.19345173, 0.1934143 , 0.19344874, 0.19340853, 0.19344952,
       0.19339231, 0.19343578, 0.19342643, 0.19341616, 0.19341542,
       0.19344587, 0.19341786, 0.19345082, 0.19341421, 0.19345902,
       0.19343398, 0.19336716, 0.19343805, 0.1934115 , 0.19342169,
       0.1936316 , 0.19364758, 0.19363521, 0.19363901, 0.19360961,
       0.19363826, 0.1936404 , 0.19364222, 0.19364456, 0.19363835,
       0.19363413, 0.19365876, 0.19365061, 0.19362213, 0.19365443,
       0.19366055, 0.19364617, 0.19366495, 0.1936336 , 0.19365026,
       0.19361176, 0.19364897, 0.19363823, 0.19363744, 0.19363702]), 'mean_test_score': array([0.05694611, 0.05703067, 0.05694428, 0.0566485 , 0.05691204,
       0.05689454, 0.05691871, 0.05675997, 0.05706316, 0.05690949,
       0.05683367, 0.05680329, 0.05697868, 0.05701103, 0.05712553,
       0.05716295, 0.05702187, 0.05699423, 0.0568837 , 0.05705965,
       0.05696379, 0.0569705 , 0.05694732, 0.05675651, 0.05703618,
       0.1821241 , 0.18211443, 0.18213398, 0.18215259, 0.18211115,
       0.18215935, 0.1821277 , 0.18212728, 0.18212583, 0.18208615,
       0.18209383, 0.18214661, 0.18214668, 0.18221487, 0.18214273,
       0.18212285, 0.18220351, 0.18207181, 0.18215623, 0.18211152,
       0.18204331, 0.18216835, 0.18209687, 0.18217117, 0.18213403,
       0.19082208, 0.19082079, 0.19082763, 0.19083365, 0.1908554 ,
       0.19082094, 0.19084286, 0.19083561, 0.19083067, 0.19083365,
       0.19084119, 0.19084439, 0.19082346, 0.19083501, 0.19081419,
       0.19080369, 0.1908298 , 0.19084562, 0.19086056, 0.19084103,
       0.19081865, 0.19081974, 0.19083973, 0.19083727, 0.19083081,
       0.19124481, 0.19123157, 0.19124565, 0.19124813, 0.19124045,
       0.19126188, 0.19123329, 0.19125921, 0.19122947, 0.19125782,
       0.19122603, 0.19124211, 0.19124381, 0.19125077, 0.19124026,
       0.19126469, 0.1912311 , 0.19125612, 0.19123584, 0.19127103,
       0.19124645, 0.19121684, 0.19126349, 0.19123291, 0.19123596,
       0.19125705, 0.19125278, 0.19125027, 0.19124865, 0.19123715,
       0.19124488, 0.19125509, 0.19124454, 0.19125293, 0.19124469,
       0.19124532, 0.19126607, 0.19124604, 0.19125227, 0.19126555,
       0.19125927, 0.19126047, 0.19126885, 0.19124652, 0.19126105,
       0.19123181, 0.19125628, 0.1912472 , 0.19125454, 0.1912459 ]), 'std_test_score': array([0.00762738, 0.0075062 , 0.00746861, 0.00768329, 0.00777908,
       0.00773886, 0.00769001, 0.00777569, 0.00757611, 0.00767451,
       0.00748085, 0.00767903, 0.00761351, 0.00760782, 0.00769109,
       0.00763266, 0.00767007, 0.00789968, 0.00770466, 0.00748039,
       0.00795902, 0.00751493, 0.00772003, 0.00787253, 0.00751714,
       0.00207623, 0.00208973, 0.0020532 , 0.00206598, 0.00207371,
       0.00207704, 0.00205906, 0.00207872, 0.00210693, 0.00208716,
       0.00208795, 0.0019962 , 0.00209256, 0.00195961, 0.00206222,
       0.00207715, 0.00205866, 0.00211383, 0.00207639, 0.00215376,
       0.00212811, 0.00203105, 0.00207565, 0.00204913, 0.00199487,
       0.00120406, 0.00120191, 0.00121126, 0.00122034, 0.00124876,
       0.00120957, 0.0012346 , 0.00122322, 0.00122292, 0.00121652,
       0.00123228, 0.00122759, 0.00121239, 0.00121851, 0.00119777,
       0.00119424, 0.00121965, 0.00123172, 0.00124842, 0.00123687,
       0.0012056 , 0.00120578, 0.00122129, 0.00122415, 0.00122105,
       0.00218417, 0.00216171, 0.00220599, 0.00217383, 0.00217319,
       0.00218986, 0.00218101, 0.00218952, 0.00217906, 0.0021917 ,
       0.00216628, 0.00219367, 0.00218262, 0.00216539, 0.00217516,
       0.00218119, 0.00218676, 0.0021947 , 0.00217836, 0.00218799,
       0.00218753, 0.00215032, 0.00217457, 0.00217859, 0.00218573,
       0.00237454, 0.0023948 , 0.00238494, 0.00239036, 0.00237246,
       0.00239339, 0.0023853 , 0.00239768, 0.00239163, 0.00239366,
       0.00238881, 0.0023927 , 0.00240457, 0.00236985, 0.00238888,
       0.00240128, 0.0023857 , 0.00239609, 0.00238707, 0.00238921,
       0.00237995, 0.00239269, 0.00239103, 0.00238291, 0.00239111]), 'rank_test_score': array([114, 106, 115, 125, 117, 119, 116, 123, 103, 118, 121, 122, 110,
       108, 102, 101, 107, 109, 120, 104, 112, 111, 113, 124, 105,  91,
        93,  87,  82,  95,  80,  88,  89,  90,  98,  97,  84,  83,  76,
        85,  92,  77,  99,  81,  94, 100,  79,  96,  78,  86,  69,  71,
        67,  62,  52,  70,  55,  60,  65,  63,  56,  54,  68,  61,  74,
        75,  66,  53,  51,  57,  73,  72,  58,  59,  64,  33,  46,  30,
        24,  38,   7,  43,  11,  48,  12,  49,  37,  36,  21,  39,   5,
        47,  15,  42,   1,  27,  50,   6,  44,  41,  13,  19,  22,  23,
        40,  32,  16,  35,  18,  34,  31,   3,  28,  20,   4,  10,   9,
         2,  26,   8,  45,  14,  25,  17,  29], dtype=int32), 'split0_train_score': array([0.06604723, 0.06600649, 0.06587725, 0.06578881, 0.0661721 ,
       0.06610593, 0.06607919, 0.06600496, 0.06611631, 0.06604958,
       0.06577883, 0.06594694, 0.06606373, 0.06609052, 0.06629517,
       0.06628124, 0.06616401, 0.06638003, 0.06605513, 0.06600948,
       0.06640929, 0.06595387, 0.06614171, 0.06610602, 0.06602304,
       0.18555033, 0.18555286, 0.18552401, 0.18555315, 0.18551632,
       0.1855923 , 0.18549945, 0.18554817, 0.18557049, 0.18551315,
       0.18552151, 0.18546972, 0.18558113, 0.18552995, 0.18554475,
       0.18555236, 0.18563763, 0.18551518, 0.18557059, 0.18562075,
       0.18551899, 0.18553786, 0.18552853, 0.18556175, 0.18544096,
       0.1942246 , 0.19422285, 0.19421446, 0.1942257 , 0.19422433,
       0.1942159 , 0.1942217 , 0.1942194 , 0.19423218, 0.19422219,
       0.19422519, 0.19423505, 0.1942341 , 0.19423434, 0.19421874,
       0.19422415, 0.19421861, 0.19423002, 0.19422967, 0.1942436 ,
       0.19422914, 0.19423404, 0.19422917, 0.1942278 , 0.19422954,
       0.19467506, 0.19467144, 0.1946762 , 0.19467306, 0.19467272,
       0.19467343, 0.19467454, 0.19467331, 0.19467585, 0.19467415,
       0.19467512, 0.19467671, 0.19467288, 0.19467157, 0.19467363,
       0.19467134, 0.19467777, 0.19467515, 0.19467523, 0.19467091,
       0.19467374, 0.19467294, 0.19467022, 0.19467469, 0.19467559,
       0.19469183, 0.1946926 , 0.19469214, 0.19469271, 0.1946926 ,
       0.19469267, 0.19469216, 0.19469283, 0.19469269, 0.19469258,
       0.19469253, 0.19469218, 0.19469301, 0.19469158, 0.1946923 ,
       0.1946927 , 0.19469231, 0.19469224, 0.19469271, 0.1946923 ,
       0.19469257, 0.19469247, 0.19469271, 0.19469226, 0.19469258]), 'split1_train_score': array([0.04897987, 0.04917992, 0.04913249, 0.0486351 , 0.04879394,
       0.04882163, 0.0488912 , 0.04865723, 0.04914067, 0.04889324,
       0.04900604, 0.04879035, 0.04902639, 0.04905619, 0.04908869,
       0.04918248, 0.04900514, 0.04875938, 0.04884747, 0.04922939,
       0.04867175, 0.04910988, 0.04889062, 0.04855924, 0.04916956,
       0.1802661 , 0.1802092 , 0.18026976, 0.18028675, 0.18023673,
       0.1802654 , 0.18026708, 0.1802334 , 0.18021172, 0.1801952 ,
       0.18019382, 0.18033504, 0.18023303, 0.18042581, 0.18027371,
       0.18023304, 0.18033297, 0.18014968, 0.1802688 , 0.18014677,
       0.18010511, 0.18033165, 0.18019625, 0.18030595, 0.18032246,
       0.18941447, 0.18940654, 0.18942359, 0.18943853, 0.18945256,
       0.18941686, 0.18944616, 0.18943604, 0.18942983, 0.18943079,
       0.18944747, 0.18944147, 0.18941792, 0.18942954, 0.18940251,
       0.18940033, 0.18942617, 0.18944266, 0.18945822, 0.18945111,
       0.18941309, 0.18941098, 0.18943333, 0.1894338 , 0.18943053,
       0.18994909, 0.18994365, 0.18995481, 0.18995068, 0.189948  ,
       0.18995436, 0.18995021, 0.18995374, 0.18994411, 0.189954  ,
       0.18994039, 0.18995175, 0.18994877, 0.1899487 , 0.18994851,
       0.18995257, 0.18994734, 0.18995439, 0.18994725, 0.18995512,
       0.18995231, 0.18993615, 0.1899527 , 0.18994626, 0.18995051,
       0.18997042, 0.18997118, 0.18997109, 0.18997101, 0.18997055,
       0.18997139, 0.18997148, 0.18997137, 0.18997165, 0.18997152,
       0.18997146, 0.18997201, 0.18997181, 0.18997076, 0.18997182,
       0.1899716 , 0.1899718 , 0.18997118, 0.18997128, 0.18997154,
       0.18996857, 0.18997176, 0.1899707 , 0.1899715 , 0.18997129]), 'mean_train_score': array([0.05751355, 0.0575932 , 0.05750487, 0.05721195, 0.05748302,
       0.05746378, 0.0574852 , 0.05733109, 0.05762849, 0.05747141,
       0.05739243, 0.05736864, 0.05754506, 0.05757336, 0.05769193,
       0.05773186, 0.05758458, 0.05756971, 0.0574513 , 0.05761944,
       0.05754052, 0.05753187, 0.05751617, 0.05733263, 0.0575963 ,
       0.18290822, 0.18288103, 0.18289689, 0.18291995, 0.18287652,
       0.18292885, 0.18288326, 0.18289078, 0.1828911 , 0.18285417,
       0.18285766, 0.18290238, 0.18290708, 0.18297788, 0.18290923,
       0.1828927 , 0.1829853 , 0.18283243, 0.18291969, 0.18288376,
       0.18281205, 0.18293476, 0.18286239, 0.18293385, 0.18288171,
       0.19181953, 0.1918147 , 0.19181902, 0.19183211, 0.19183845,
       0.19181638, 0.19183393, 0.19182772, 0.191831  , 0.19182649,
       0.19183633, 0.19183826, 0.19182601, 0.19183194, 0.19181063,
       0.19181224, 0.19182239, 0.19183634, 0.19184395, 0.19184736,
       0.19182111, 0.19182251, 0.19183125, 0.1918308 , 0.19183004,
       0.19231208, 0.19230754, 0.19231551, 0.19231187, 0.19231036,
       0.19231389, 0.19231238, 0.19231352, 0.19230998, 0.19231407,
       0.19230775, 0.19231423, 0.19231082, 0.19231013, 0.19231107,
       0.19231196, 0.19231256, 0.19231477, 0.19231124, 0.19231302,
       0.19231302, 0.19230455, 0.19231146, 0.19231047, 0.19231305,
       0.19233112, 0.19233189, 0.19233161, 0.19233186, 0.19233158,
       0.19233203, 0.19233182, 0.1923321 , 0.19233217, 0.19233205,
       0.19233199, 0.19233209, 0.19233241, 0.19233117, 0.19233206,
       0.19233215, 0.19233206, 0.19233171, 0.19233199, 0.19233192,
       0.19233057, 0.19233211, 0.1923317 , 0.19233188, 0.19233193]), 'std_train_score': array([0.00853368, 0.00841328, 0.00837238, 0.00857685, 0.00868908,
       0.00864215, 0.008594  , 0.00867386, 0.00848782, 0.00857817,
       0.00838639, 0.0085783 , 0.00851867, 0.00851717, 0.00860324,
       0.00854938, 0.00857943, 0.00881032, 0.00860383, 0.00839005,
       0.00886877, 0.008422  , 0.00862555, 0.00877339, 0.00842674,
       0.00264211, 0.00267183, 0.00262712, 0.0026332 , 0.00263979,
       0.00266345, 0.00261619, 0.00265739, 0.00267938, 0.00265897,
       0.00266384, 0.00256734, 0.00267405, 0.00255207, 0.00263552,
       0.00265966, 0.00265233, 0.00268275, 0.00265089, 0.00273699,
       0.00270694, 0.00260311, 0.00266614, 0.0026279 , 0.00255925,
       0.00240507, 0.00240816, 0.00239544, 0.00239358, 0.00238589,
       0.00239952, 0.00238777, 0.00239168, 0.00240118, 0.0023957 ,
       0.00238886, 0.00239679, 0.00240809, 0.0024024 , 0.00240812,
       0.00241191, 0.00239622, 0.00239368, 0.00238572, 0.00239625,
       0.00240803, 0.00241153, 0.00239792, 0.002397  , 0.0023995 ,
       0.00236299, 0.00236389, 0.0023607 , 0.00236119, 0.00236236,
       0.00235953, 0.00236216, 0.00235979, 0.00236587, 0.00236008,
       0.00236736, 0.00236248, 0.00236205, 0.00236144, 0.00236256,
       0.00235939, 0.00236521, 0.00236038, 0.00236399, 0.0023579 ,
       0.00236071, 0.00236839, 0.00235876, 0.00236421, 0.00236254,
       0.0023607 , 0.00236071, 0.00236052, 0.00236085, 0.00236102,
       0.00236064, 0.00236034, 0.00236073, 0.00236052, 0.00236053,
       0.00236053, 0.00236008, 0.0023606 , 0.00236041, 0.00236024,
       0.00236055, 0.00236026, 0.00236053, 0.00236072, 0.00236038,
       0.002362  , 0.00236036, 0.002361  , 0.00236038, 0.00236065])}